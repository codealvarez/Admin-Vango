{"version":3,"sources":["webpack:///./src/app/layout/verruta/verruta-routing.module.ts","webpack:///./src/app/layout/verruta/verruta.component.html","webpack:///./src/app/layout/verruta/verruta.component.scss","webpack:///./src/app/layout/verruta/verruta.component.ts","webpack:///./src/app/layout/verruta/verruta.module.ts"],"names":[],"mappings":"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","file":"verruta-verruta-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { VerrutaComponent } from './verruta.component';\n\nconst routes: Routes = [\n\t{\n        path: '', component: VerrutaComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class VerrutaRoutingModule { }\n","module.exports = \"<div [@routerTransition]>\\n    <app-page-header [heading]=\\\"'Ver ruta'\\\" [icon]=\\\"'fa-map-signs'\\\"></app-page-header>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-xl-12 col-lg-12\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                    Ver ruta ({{idRuta}}) - {{nombre}}\\n                    <!-- <button class=\\\"btn btn-success pull-right\\\" (click)=\\\"guardar()\\\">Guardar ruta</button> -->\\n                    <button class=\\\"btn btn-success pull-right\\\" [routerLink]=\\\"['/viajes/'+idRuta]\\\">Ver viajes</button>\\n                </div>\\n                <div class=\\\"card-body table-responsive\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col col-xl-6 col-lg-12\\\">\\n                            <div class=\\\"alert alert-secondary\\\" role=\\\"alert\\\">\\n                              Información de la ruta\\n                            </div>\\n                            <ul class=\\\"list-group list-group-flush\\\">\\n                                <li class=\\\"list-group-item\\\">Origen: <strong>{{origen}}</strong></li>\\n                                <li class=\\\"list-group-item\\\">Destino: <strong>{{destino}}</strong></li>\\n                                <li class=\\\"list-group-item\\\">Términos de búsqueda: <strong>{{terminos}}</strong></li>\\n                            </ul>\\n\\n                            <div class=\\\"alert alert-secondary\\\" role=\\\"alert\\\">\\n                              Inicio de la ruta\\n                            </div>\\n                            <ul class=\\\"list-group list-group-flush\\\">\\n                                <li class=\\\"list-group-item\\\">Lugar: <strong>{{origen}}</strong></li>\\n                                <li class=\\\"list-group-item\\\">Latitud: <strong>{{latInicial}}</strong></li>\\n                                <li class=\\\"list-group-item\\\">Longitud: <strong>{{lonInicial}}</strong></li>\\n                            </ul>\\n\\n                            <div class=\\\"alert alert-secondary\\\" role=\\\"alert\\\">\\n                              Fin de la ruta\\n                            </div>\\n                            <ul class=\\\"list-group list-group-flush\\\">\\n                                <li class=\\\"list-group-item\\\">Lugar: <strong>{{destino}}</strong></li>\\n                                <li class=\\\"list-group-item\\\">Latitud: <strong>{{latFinal}}</strong></li>\\n                                <li class=\\\"list-group-item\\\">Longitud: <strong>{{lonFinal}}</strong></li>\\n                            </ul>\\n                        </div>\\n                        <div class=\\\"col col-xl-6 col-lg-12\\\">\\n                            <div class=\\\"alert alert-secondary\\\" role=\\\"alert\\\">\\n                              Previsualización de la ruta\\n                            </div>\\n                        \\t<div #gmap style=\\\"width:100%;height:400px\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col col-xl-12 col-lg-12\\\">\\n                            <div id=\\\"contPuntos\\\">\\n                                <div class=\\\"alert alert-secondary\\\" role=\\\"alert\\\">\\n                                  Puntos de la ruta\\n                                </div>\\n                                <table class=\\\"table table-striped\\\">\\n                                  <thead>\\n                                    <tr>\\n                                      <th scope=\\\"col\\\">#</th>\\n                                      <th scope=\\\"col\\\">Nombre</th>\\n                                      <th scope=\\\"col\\\">Dirección</th>\\n                                      <th scope=\\\"col\\\">Latitud</th>\\n                                      <th scope=\\\"col\\\">Longitud</th>\\n                                      <th scope=\\\"col\\\">Acciones</th>\\n                                    </tr>\\n                                  </thead>\\n                                  <tbody>\\n                                    <tr *ngFor=\\\"let item of paradas\\\">\\n                                      <th scope=\\\"row\\\">{{item.idparada}}</th>\\n                                      <td>{{item.nombre}}</td>\\n                                      <td>{{item.direccion}}</td>\\n                                      <td>{{item.latitud}}</td>\\n                                      <td>{{item.longitud}}</td>\\n                                      <td><button (click)=\\\"borrarParada(item.idparada)\\\" class=\\\"btn btn-danger btn-sm\\\"><i class=\\\"fa fa-trash\\\"></i></button></td>\\n                                    </tr>\\n                                  </tbody>\\n                                </table>\\n                                <form role=\\\"form\\\">\\n                                  <div class=\\\"form-row\\\">\\n                                    <div class=\\\"col\\\">\\n                                      <input [(ngModel)]=\\\"nombrePunto\\\" id=\\\"nombrePunto\\\" name=\\\"nombrePunto\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Nombre\\\" required>\\n                                    </div>\\n                                    <div class=\\\"col\\\">\\n                                      <input [(ngModel)]=\\\"direccionPunto\\\" id=\\\"direccionPunto\\\" name=\\\"direccionPunto\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Dirección\\\" required>\\n                                    </div>\\n                                    <div class=\\\"col\\\">\\n                                      <input [(ngModel)]=\\\"latitudPunto\\\" id=\\\"latitudPunto\\\" name=\\\"latitudPunto\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Latitud\\\" required>\\n                                    </div>\\n                                    <div class=\\\"col\\\">\\n                                      <input [(ngModel)]=\\\"longitudPunto\\\" id=\\\"longitudPunto\\\" name=\\\"longitudPunto\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Longitud\\\" required>\\n                                    </div>\\n                                  </div>\\n                                  <button (click)=\\\"agregarParada()\\\" class=\\\"btn btn-primary pull-right mt-1\\\">Agregar parada</button>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \"\"","/// <reference types=\"@types/googlemaps\" />\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport { WebService } from \"../../ws.service\";\nimport { Router,ActivatedRoute, Params} from '@angular/router';\n//import { } from '@types/googlemaps';\n\n@Component({\n  selector: 'app-verruta',\n  templateUrl: './verruta.component.html',\n  styleUrls: ['./verruta.component.scss'],\n  animations: [routerTransition()]\n})\n\nexport class VerrutaComponent implements OnInit {\n  @ViewChild('gmap') gmapElement: any;\n  map: google.maps.Map;\n  idRuta:string;\n  latitude:number=4.630399;\n  longitude:number=-74.091343;\n  latInicial:number;\n  lonInicial:number;\n  latFinal:number;\n  lonFinal:number;\n\n  paradas = [];\n\n  //Detalles\n  origen:string;\n  destino:string;\n  nombre:string;\n  terminos:string;\n\n  //Crear punto\n  nombrePunto:string;\n  direccionPunto:string;\n  latitudPunto:number;\n  longitudPunto:number;\n\n\n  constructor(private myService: WebService,private activatedRoute: ActivatedRoute) {\n  \t//Obtener parámetros de URL\n  \tlet model = this;\n  \tmodel.activatedRoute.params.subscribe((params: Params) => {\n  \t\tmodel.idRuta = params['idRuta'];\n  \t\tconsole.log(model.idRuta);\n  \t});\n  }\n  \n\n  ngOnInit() {\n  \tlet model = this;\n\n  \t//Pintar mapa\n  \tlet mapProp = {\n      center: new google.maps.LatLng(model.latitude,model.longitude),\n      zoom: 11,\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n    };\n    model.map = new google.maps.Map(model.gmapElement.nativeElement, mapProp);\n    model.obtenerPuntosRuta();\n\n\n\t  \n\n    model.myService.getDetallesRuta(model.idRuta).subscribe((res) => {\n            \n      console.log('Respuesta de los detalles de la ruta: '+model.idRuta);\n      console.log(res);\n      model.origen = res[0].origen;\n      model.destino = res[0].destino;\n      model.nombre = res[0].nombreruta;\n      model.terminos = res[0].terminos; \n    }, (error) => {\n      alert('Error obteniendo los detalles de la ruta');\n    }); \n\n  }\n  obtenerPuntosRuta(){\n    let model = this;\n    model.myService.getPuntosRuta(model.idRuta).subscribe((res) => {\n      model.paradas=[];\n      console.log('Respuesta de la ruta: '+model.idRuta);\n      console.log(res);\n      for(let i = 0; i <Object.keys(res).length; i++) {\n          console.log('Detalle de punto');\n          console.log(res[i]);\n          if(res[i].tipo == 'INICIO'){\n\n              model.latInicial = res[i].latitud*1;\n              model.lonInicial = res[i].longitud*1;\n              //centrar mapa en inicio de ruta\n              model.latitude = res[i].latitud*1;\n              model.longitude = res[i].longitud*1;\n\n              model.map.setCenter(new google.maps.LatLng(model.latitude,model.longitude));\n\n              let uluru = {lat: model.latitude, lng: model.longitude};\n              let marker = new google.maps.Marker({position: uluru, map: model.map});\n          }\n          if(res[i].tipo == 'FIN'){\n              model.latFinal = res[i].latitud*1;\n              model.lonFinal = res[i].longitud*1;\n              let uluru = {lat: model.latFinal, lng: model.lonFinal};\n              let marker = new google.maps.Marker({position: uluru, map: model.map});\n          }\n          if(res[i].tipo == 'NORMAL'){\n            //Array: lat,lon,idParada\n            model.paradas.push(res[i]);\n          }\n      }\n            \n    }, (error) => {\n      alert('Error obteniendo los puntos de la ruta');\n    }); \n  }\n  borrarParada(idParada){\n    let model = this;\n    if(confirm(\"Seguro de borrar la parada: \"+idParada)) {\n      model.myService.deleteParadaRuta(model.idRuta,idParada).subscribe((res:any) => {\n            \n        console.log('Respuesta de los detalles de la ruta: '+model.idRuta);\n        console.log(res);\n        if(res.resultado==\"OK\"){\n          alert(res.mensaje);\n          model.obtenerPuntosRuta();\n        }\n        \n      }, (error) => {\n        alert('Error obteniendo los detalles de la ruta');\n      }); \n    }\n    \n  }\n  agregarParada(){\n    let model = this;\n    if(model.nombrePunto && model.direccionPunto && model.latitudPunto && model.longitudPunto){\n      model.myService.agregarParadaRuta(model.idRuta,model.nombrePunto,model.direccionPunto,model.latitudPunto,model.longitudPunto).subscribe((res:any) => {\n            \n        console.log('Respuesta de agregar punto a ruta: '+model.idRuta);\n        console.log(res);\n        if(res.resultado==\"OK\"){\n          alert(\"Parada agregada exitosamente\");\n          model.obtenerPuntosRuta();\n          model.nombrePunto='';\n          model.direccionPunto='';\n          model.latitudPunto=null;\n          model.longitudPunto=null;\n        }\n      }, (error) => {\n        alert('Error agregando punto a la ruta');\n      }); \n    }else{\n      alert('Debes completar todos los datos');\n    }\n  }\n  ngAfterContentInit() {\n    \n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule }   from '@angular/forms';\n\nimport { VerrutaRoutingModule } from './verruta-routing.module';\nimport { VerrutaComponent } from './verruta.component';\nimport { PageHeaderModule } from './../../shared';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    VerrutaRoutingModule,\n    PageHeaderModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [VerrutaComponent]\n})\nexport class VerrutaModule { }\n"],"sourceRoot":""}